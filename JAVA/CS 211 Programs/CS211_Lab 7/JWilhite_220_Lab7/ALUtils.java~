import java.util.*;
public class ALUtils
{
// Creates a copy of the parameter a. Reverses the order of elements
// in the copy and returns the reversed copy. Assumes a is non-null.
	public static void main(String[] args)
	{
		String [] d = {"A","B","C","D"};
		ArrayList<Integer> a = new ArrayList<Integer>();
		a.addAll(Arrays.asList(d));
		String sourceBefore = a.toString();

		ArrayList<Integer> actualA = ALUtils.rotate(a, shift);
	}
	
	public static ArrayList<String> reverse(ArrayList<String> a) //(COMPLETE)
	{
	/*
		scan the provided string arraylist from the back to the front 
		adding each variable in the list to the return list as it goes:
		thereby, reversing the list.
	*/
		ArrayList<String> rvrsd_ars = new ArrayList<String>();
		for (int i = a.size() - 1;i >= 0;i--)
		{
			rvrsd_ars.add(a.get(i));
		}
		return rvrsd_ars;
	}

	// Creates a copy of the given ArrayList a and rotates the copy to
	// the right by the given shift.  Elements at high indicies wrap
	// around to lower indices.  Assumes parameter a is non-null and
	// that shift is a non-negative number. Returns the rotated copy.
	public static ArrayList<Integer> rotate(ArrayList<Integer> a, int shift) //(WIP)
	{
		ArrayList<Integer> shifted = new ArrayList<Integer>();
		for (int i = shift; i < a.size() - 1; i++)
		{
			shifted.add(a.get(i));
		}
		
		for (int i = 0; i < shift; i++)
		{
			shifted.add(a.get(i));
		}
		return shifted;		
	}

}
